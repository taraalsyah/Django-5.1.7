"""
Django settings for mywebsite project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import ssl, certifi


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%8-jl3tb%8c4fjvp5g*)o@mj3ysm7!zh13p=14m3a-kl0fvrz&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
    'about',
    'crispy_forms',
    'crispy_bootstrap5',
]

MIDDLEWARE = [
    # Security headers & HTTPS handling
    'django.middleware.security.SecurityMiddleware',

    # Session management (wajib sebelum AuthenticationMiddleware)
    'django.contrib.sessions.middleware.SessionMiddleware',

    # Common stuff (ETag, Content-Length, canonical redirects)
    'django.middleware.common.CommonMiddleware',

    # CSRF protection (harus sebelum AuthenticationMiddleware)
    'django.middleware.csrf.CsrfViewMiddleware',

    # User authentication (wajib sebelum middleware custom yang butuh request.user)
    'django.contrib.auth.middleware.AuthenticationMiddleware',

    # Middleware custom kamu
    'mywebsite.middleware.LoginRequiredMiddleware',
    'mywebsite.middleware.AutoLogoutMiddleware',

    # Messages framework
    'django.contrib.messages.middleware.MessageMiddleware',

    # Prevent clickjacking
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'mywebsite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mywebsite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'djangoproject',
        'USER': 'root',
        'PASSWORD' : 'Tara2025#',
        'HOST' : 'localhost',
        'PORT' : '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static')
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Redirect here after successful login if no ?next= param
LOGIN_REDIRECT_URL = 'index'

# Redirect to login page if user not authenticated
LOGIN_URL = 'register'

LOGOUT_REDIRECT_URL = 'login' # after logout, go here


# Session will expire after 30 minutes of inactivity
SESSION_COOKIE_AGE = 30 * 60  # 30 minutes in seconds
SESSION_SAVE_EVERY_REQUEST = True  # Reset timer on each request
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Optional: end session when browser closes


#email config

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'taraalsyah45@gmail.com'
EMAIL_HOST_PASSWORD = 'jgyjrejoysspxhqx'  # Gunakan App Password jika 2FA aktif

EMAIL_SSL_CONTEXT = ssl.create_default_context(cafile=certifi.where())

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"